version: '3.8'

services:
  v8-integration:
    build: 
      context: .
      target: production
    container_name: v8-cpp-integration
    environment:
      - V8_LOG_LEVEL=INFO
      - V8_ENABLE_SANDBOX=true
      - V8_MAX_MEMORY_MB=512
    volumes:
      - ./logs:/app/logs
      - ./config:/app/config:ro
    healthcheck:
      test: ["CMD", "./system_v8_example"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  v8-dev:
    build:
      context: .
      target: development
    container_name: v8-cpp-dev
    environment:
      - V8_LOG_LEVEL=DEBUG
      - V8_ENABLE_SANDBOX=false
      - V8_DEBUG=1
    volumes:
      - .:/app
      - ./logs:/app/logs
      - v8-dev-cache:/home/devuser/.cache
    ports:
      - "8080:8080"  # For development server
      - "9229:9229"  # For debugging
    tty: true
    stdin_open: true
    command: /bin/bash

  v8-test:
    build:
      context: .
      target: builder
    container_name: v8-cpp-test
    environment:
      - V8_LOG_LEVEL=DEBUG
      - GTEST_COLOR=1
    volumes:
      - ./test-results:/app/test-results
      - ./coverage:/app/coverage
    command: >
      sh -c "
        ./ShellScripts/run_tests.sh &&
        lcov --capture --directory . --output-file coverage/coverage.info &&
        genhtml coverage/coverage.info --output-directory coverage/html
      "

  v8-benchmark:
    build:
      context: .
      target: builder
    container_name: v8-cpp-benchmark
    environment:
      - V8_LOG_LEVEL=WARN
    volumes:
      - ./benchmark-results:/app/benchmark-results
    command: >
      sh -c "
        ./build/performance_tests --benchmark_format=json > benchmark-results/results.json
      "

  prometheus:
    image: prom/prometheus:latest
    container_name: v8-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'

  grafana:
    image: grafana/grafana:latest
    container_name: v8-grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false

volumes:
  v8-dev-cache:
  prometheus-data:
  grafana-data:

networks:
  default:
    name: v8-network
    driver: bridge