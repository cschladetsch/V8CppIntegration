digraph CppV8Architecture {
    // Graph settings
    rankdir=TB;
    node [shape=box, style="rounded,filled", fontname="Arial"];
    edge [fontname="Arial"];
    
    // Color scheme
    node [fillcolor=lightblue];
    
    // Subgraphs for organization
    subgraph cluster_build {
        label="Build System";
        style=filled;
        fillcolor=lightyellow;
        
        // Shell scripts
        node [fillcolor=lightgreen];
        "build.sh" [label="build.sh\n(Main Entry)"];
        "build_from_source.sh" [label="build_from_source.sh\n(Complete Setup)"];
        "SetupV8.sh" [label="Scripts/Build/SetupV8.sh\n(Download V8)"];
        "BuildV8.sh" [label="Scripts/Build/BuildV8.sh\n(Compile V8)"];
        
        // CMake
        node [fillcolor=lightcoral];
        "CMakeLists.txt" [label="CMakeLists.txt\n(Project Config)"];
        "BuildV8.cmake" [label="CMake/BuildV8.cmake\n(V8 Integration)"];
        "FindV8.cmake" [label="CMake/FindV8.cmake\n(System V8)"];
    }
    
    subgraph cluster_v8 {
        label="V8 Engine";
        style=filled;
        fillcolor=lightgray;
        
        node [fillcolor=darkseagreen];
        "depot_tools" [label="depot_tools\n(Google Build Tools)"];
        "V8 Source" [label="V8 Source\n(JavaScript Engine)"];
        "libv8_monolith.a" [label="libv8_monolith.a\n(Static Library)"];
        "System V8" [label="System V8\n(apt: libv8-dev)"];
    }
    
    subgraph cluster_integration {
        label="Integration Layer";
        style=filled;
        fillcolor=lavender;
        
        node [fillcolor=plum];
        "v8_compat.h" [label="Include/v8_compat.h\n(Compatibility Layer)"];
        "error_handler" [label="v8_integration/error_handler\n(Error Management)"];
        "monitoring" [label="v8_integration/monitoring\n(Performance)"];
        "security" [label="v8_integration/security\n(Sandboxing)"];
        "advanced_features" [label="v8_integration/advanced_features\n(Extensions)"];
    }
    
    subgraph cluster_examples {
        label="Example Applications";
        style=filled;
        fillcolor=lightcyan;
        
        node [fillcolor=skyblue];
        "MinimalExample" [label="MinimalExample\n(Basic Demo)"];
        "SystemV8Example" [label="SystemV8Example\n(System V8 Usage)"];
        "BidirectionalExample" [label="BidirectionalExample\n(C++ âŸ· JS)"];
        "AdvancedExample" [label="AdvancedExample\n(Complex Patterns)"];
        "WebServerExample" [label="WebServerExample\n(Real Application)"];
    }
    
    subgraph cluster_tests {
        label="Test Infrastructure";
        style=filled;
        fillcolor=mistyrose;
        
        node [fillcolor=lightsalmon];
        "BasicTests" [label="BasicTests\n(40 tests)"];
        "AdvancedTests" [label="AdvancedTests\n(40 tests)"];
        "IntegrationTests" [label="IntegrationTests\n(40 tests)"];
        "InteroperabilityTests" [label="InteroperabilityTests\n(34 tests)"];
        "BenchmarkTests" [label="BenchmarkTests\n(Performance)"];
    }
    
    // Build flow connections
    "build.sh" -> "CMakeLists.txt" [label="invokes"];
    "build_from_source.sh" -> "SetupV8.sh" [label="1. setup"];
    "build_from_source.sh" -> "BuildV8.sh" [label="2. build"];
    "build_from_source.sh" -> "build.sh" [label="3. project"];
    
    "SetupV8.sh" -> "depot_tools" [label="downloads"];
    "depot_tools" -> "V8 Source" [label="fetches"];
    "BuildV8.sh" -> "V8 Source" [label="builds"];
    "V8 Source" -> "libv8_monolith.a" [label="produces"];
    
    "CMakeLists.txt" -> "BuildV8.cmake" [label="includes"];
    "CMakeLists.txt" -> "FindV8.cmake" [label="uses"];
    "BuildV8.cmake" -> "libv8_monolith.a" [label="links"];
    "FindV8.cmake" -> "System V8" [label="finds"];
    
    // Integration connections
    "CMakeLists.txt" -> "v8_compat.h" [label="configures"];
    "v8_compat.h" -> "libv8_monolith.a" [label="wraps", style=dashed];
    "v8_compat.h" -> "System V8" [label="wraps", style=dashed];
    
    "v8_compat.h" -> "error_handler" [label="uses"];
    "v8_compat.h" -> "monitoring" [label="uses"];
    "v8_compat.h" -> "security" [label="uses"];
    "v8_compat.h" -> "advanced_features" [label="uses"];
    
    // Example connections
    edge [color=blue];
    "v8_compat.h" -> "MinimalExample" [label="includes"];
    "v8_compat.h" -> "SystemV8Example" [label="includes"];
    "v8_compat.h" -> "BidirectionalExample" [label="includes"];
    "v8_compat.h" -> "AdvancedExample" [label="includes"];
    "v8_compat.h" -> "WebServerExample" [label="includes"];
    
    // Test connections
    edge [color=red];
    "v8_compat.h" -> "BasicTests" [label="tests"];
    "v8_compat.h" -> "AdvancedTests" [label="tests"];
    "v8_compat.h" -> "IntegrationTests" [label="tests"];
    "v8_compat.h" -> "InteroperabilityTests" [label="tests"];
    "v8_compat.h" -> "BenchmarkTests" [label="benchmarks"];
    
    // Output artifacts
    edge [color=darkgreen, style=bold];
    "CMakeLists.txt" -> "Examples" [label="builds", style=bold];
    "CMakeLists.txt" -> "Tests" [label="builds", style=bold];
    
    // Legend
    subgraph cluster_legend {
        label="Legend";
        style=filled;
        fillcolor=white;
        
        node [shape=plaintext, fillcolor=white];
        legend [label=<
            <TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0">
            <TR><TD BGCOLOR="lightgreen">Shell Scripts</TD></TR>
            <TR><TD BGCOLOR="lightcoral">CMake Files</TD></TR>
            <TR><TD BGCOLOR="darkseagreen">V8 Components</TD></TR>
            <TR><TD BGCOLOR="plum">Integration Layer</TD></TR>
            <TR><TD BGCOLOR="skyblue">Examples</TD></TR>
            <TR><TD BGCOLOR="lightsalmon">Tests</TD></TR>
            </TABLE>
        >];
    }
}